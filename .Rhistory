sample(1:10)
sample(1,)
sample(1:10,1)
sample(1:10,1)
data(alarm)
alarm
alarm[1,]
alarm[2,]
if(2)
print("b")
if(6)
print("b")
if(!6)
print("b")
target<-1
subset<-c(2,3)
tmp[1,]
tmp[,c(target,subset)]
dim(tmp)
b<-matrix(1,0,0)
dim(b)
log(10)
source("MMHC.R")
source("MMHC.R")
source("MMHC.R")
source("MMHC.R")
tmp
target<-1
selected<-2
subset<-c[!c(target,selected) %in% 1:5]
subset<-c[!c(target,selected) %in% 1:5]
subset<-subset[!c(target,selected) %in% 1:5]
subset
subset<-c()
subset<-subset[!c(target,selected) %in% 1:5]
subset
subset<-1:5
subset<-subset[!c(target,selected) %in% 1:5]
subset
subset<-c()
subset<-subset[1:5 %in% c(target,selected)]
subset
subset<-3
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
length(tmp[which(duplicated(vec)),][3,])
length(tmp[which(duplicated(vec)),][,1])
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
observedMatrix[,c(target,selected,subset)]
tmp[,c(target,selected,subset)]
tmp[,c(target,selected,subset)][1,]
dim(tmp[which(duplicated(tmp[1,])),])
dim(tmp[which(duplicated(tmp[1,])),])
dim(tmp[which(duplicated(tmp[1,])),][,1])
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
tmp[,c(subset)][1,]
tmp[,c(subset)]
tmp[,c(subset)][1]
dim(tmp[,c(subset)][1,])
dim(tmp[,c(subset)])
dim(tmp[,c(subset)][1])
dim(tmp[,c(subset)])
quit()
source("MMHC.R")
quit()
source("MMHC.R")
MMPC.Gsquared()
tmp
target
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
print(rownames(partialMatrix[which(duplicated(targetVector)),]))
print(rownames(tmp[which(duplicated(c("99","96"))),]))
tmp[which(duplicated(c("99")))]
tmp
rownames(tmp[which(duplicated(c("99")))])
rownames(tmp)
rownames(tmp[which(duplicated(c("99"))),])
rownames(tmp[])
rownames(tmp[1,])
rownames(tmp[,1])
x<-rownames(tmp)
x
y<-c("99","100")
y
x<-x[which(duplicated(y))]
x
x<-rownames(tmp)
x
z<-which(x==y)
z
x<-tmp[1,]
x
rownames(tmp[which(duplicated(x)),])
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
tmp[,subset]
tmp[,subset][1,]
tmp[,subset][1]
dim(tmp[,subset])
length(tmp[,subset])
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
tmp[,subset]
if(dim(tmp[,subset])==NULL)
print("hi")
dim(tmp[,subset])
if(dim(tmp[,subset]))
print("s")
length(tmp[,subset])
length(tmp)
tmp[,subset][1]
tmp[,subset]
subset
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
"2"
u<-"2"
class(u)
u<-as.Integer(u)
u<-as.Numeric(u)
?as
u<-as(u,"numeric")
u
class(u)
source("MMHC.R")
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
dim(partialMatrix)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
print(dim(partialMatrix[!rownames(partialMatrix) %in% toBeDeletedItems, ]))
dim(tmp[!rownames(tmp) %in% c("100","99"),])
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
?chi
??chi
?qchisq
sourceCpp("main.cpp")
library("Rcpp")
sourceCpp("main.cpp")
equal(1:10,1:10)
x<-1:10
x
y<-2:11
y
equal(x,y)
all(x,y)
?all
y<-0:9
all(x,y)
all(x==y)
y<-2:11
all(x==y)
x==y
y<-1:10
y[3]<-4
all(x==y)
x==y
sourceCpp("main.cpp")
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
rownames(observedMatrix[,c(target,selected,subset)]
)
rownames(observedMatrix[,c(target,selected,subset)])
rownames(tmp[,c(target,selected,subset)])
rownames(tmp[,c(target,selected,subset)])[1]
tmp[,c(target,selected,subset)]
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
rownames(partialMatrix[which(duplicated(targetVector))])
rownames(tmp[which(duplicated(targetVector))])
rownames(tmp[which(duplicated(tmp[1,]))])
rownames(tmp[which(duplicated(tmp[,1]))])
rownames(tmp[which(duplicated(tmp[,1])),])
rownames(tmp[which(duplicated(tmp[1,])),])
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
tmp[!rownames(tmp) %in% c("100","99")]
tmp[!rownames(tmp) %in% c("100","99"),]
tmp[!rownames(tmp) %in% c("1","2"),]
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
        rownameList <- rownames(partialMatrix[which(duplicated(partialMatrix[1,])),])
rownames(tmp[which(duplicated(tmp[1,])),])
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
length(partialMatrix[which(duplicated(targetVector))])+1
source("MMHC.R")
length(tmp[which(duplicated())])+1
MMPC.Gsquared(tmp,target,selected,subset)
length(tmp[which(duplicated(c("1","2")))])+1
length(tmp[which(duplicated(c("1")))])+1
length(tmp[which(duplicated("1"))])+1
vec<-c("1","2","3")
class(vec)
vec<-as(vec,"numeric")
vec
class(vec)
length(tmp[which(duplicated(1))])+1
length(tmp[which(duplicated(tmp[1,))])+1
length(tmp[which(duplicated(tmp[1,]))])+1
length(tmp[which(duplicated(tmp[1,]))])+1
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
source("MMHC.R")
MMPC.Gsquared(tmp,target,selected,subset)
quit()
ls()
library("Rcpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
fibonacci(10)
abs(-1)
require(Rcpp)
test<-Module("yada",getDynLib(fx))
library("inline")
test<-Module("yada",getDynLib(fx))
> fx <- cxxfunction(signature(), plugin="Rcpp", include=inc)
fx <- cxxfunction(signature(), plugin="Rcpp", include=inc)
fx <- cxxfunction(signature(), plugin="Rcpp", include=main)
main<-sourceCpp("main.cpp")
main<-sourceCpp("main.cpp")
fx <- cxxfunction(signature(), plugin="Rcpp", include=main)
main<-sourceCpp("main.cpp")
fx <- cxxfunction(signature(), plugin="Rcpp", include=main)
main<-sourceCpp("main.cpp")
sourceCpp("main.cpp")
?rnorm
x
<
y
rnorm(x,y)
norm(x,y)
?nrom
?norm
mat
mat<-matrix(1:16,4,4)
norm(mat)
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
innerProduct(x,y)
rnorm(1,1,2)
rnorm(1,1,2.0)
?rnrom
?rnorm
rnorm(10)
sourceCpp("main.cpp")
innerProduct(x,y)
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
innerProduct()
= rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))[0];
rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))[0];
x<-0
rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))[0];
rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))
innerProduct()
innerProduct()
innerProduct()
innerProduct()
?rnorm
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)[0]
sourceCpp("main.cpp")
sourceCpp("main.cpp")
innerProduct
innerProduct()
innerProduct()
innerProduct()
innerProduct()
innerProduct()
innerProduct()
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sourceCpp("main.cpp")
x<-1:10
x
mean(x)
sourceCpp("main.cpp")
innerProduct(x)
dim(mat)
mat<-matrix(1,3,5)
dim(mat)
mat
sourceCpp("main.cpp")
sourceCpp("main.cpp")
sample(1)
sample(1)
sample(1:5)
sample(0:1)
sample(0:1,0.5)
?sample
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
mat<-matrix(sample(0:1,1),4,20)
mat
mat<-matrix(sample(0:1,1),20,4)
mat
mat
mat<-matrix(sample(0:1,1),20,4)
mat
mat<-replicate(10, rnorm(20))
mat
mat<-replicate(4, rnorm(20))
mat
mat<-replicate(4, sample(1:20))
mat
mat<-replicate(4, sample(1:2))
mat
mat<-replicate(4, sample(1:2,20))
mat<-replicate(4, sample(1:2,20,replace=TRUE))
mat
mat
x<-mat[9,]
x
mat
sourceCpp("main.cpp")
Sabc(x,mat)
sourceCpp("main.cpp")
sourceCpp("main.cpp")
Sabc(x,mat)
