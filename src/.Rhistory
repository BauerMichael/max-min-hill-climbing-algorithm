length(z)
source("newCode.R")
z <- list()
z <- UpdateCPC(z, c())
length(z)
z <- list()
z <- UpdateCPC(z, c())
source("newCode.R")
z <- UpdateCPC(z, c())
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
source("newCode.R")
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- UpdateCPC(z, )
z <- UpdateCPC(z, 4)
z
z <- list()
z <- UpdateCPC(z, 2)
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- list8)
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
z <- list()
z[[1]] <- 4
z[[2]] <- 4
z[[2]] <- 6
length(z[[3]])
z
z[[3]] <- 9
z[[4]] <- ⁰
z[[4]] <- 10
z[[5]] <- 1
z
x <- z[[2:4]]
x
x <- list8)
x <- list()
x <- z[[2:4]]
x <- z[[2,4]]
x <- z[[2]]:[[4]]
x <- z[[2]:[4]]
x <- z[2:4]
z
x
source("newCode.R")
bench
CPC
MMPC(Matrix)
MMPC(Matrix)
MMPC(Matrix)
source("newCode.R")
source("newCode.R")
MMPC(Matrix)
x<-MMPC(Matrix)
x
x<-MMPC(Matrix)
x
source("newCode.R")
u <- list()
u[[1]] <- 4
u[[3]] <- 5
u
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
y
source("newCode.R")
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
y[[1]]
y[[2]]
c()
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
x <- list8)
y <- Update(y, 1)
y
length(y)
source("newCode.R")
y <- Update(y, 1)
y
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
source("newCode.R")
source("newCode.R")
y <- Update(y, 2)
y <- list8)
y <- list()
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
y
source("newCode.R")
source("newCode.R")
y <- list()
y <- Update(y, 2)
y
y <- Update(y, 2)
y
y <- Update(y, 3)
y
source("newCode.R")
source("newCode.R")
y <- Update(y, 3)
source("newCode.R")
y <- Update(y, 3)
y
source("newCode.R")
y
y <- Update(y, 3)
y
source("newCode.R")
x <- c()
class(x)
x <- c(NULL, 1, 2, 3)
x
class(x)
source("newCode.R")
y <- list()
y <- Update(y, 1)
<
y
y <- Update(y, 1)
y
y <- Update(y, 2)
y
source("newCode.R")
y <- list()
y <- Update(y, 1)
y <- Update(y, 1)
y
y <- Update(y, 2)
y
y <- Update(y, 3)
y
y <- Update(y, 4)
y
x <- list()
y <- list()
x <- c(1, 2)
y <- c(1, 2)
bench <- benchmark(Update(y, 3), UpdateCPC(x, 3), replications=10, columns=c("test", "elapsed", "relative")
)
bench <- benchmark(Update(y, 3), UpdateCPC(x, 3), replications=10, columns=c("test", "elapsed", "relative"))
warnings()
bench
x
y
x <- c(1, 2, 3, 4, 5, 6, 7)
y <- x
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench
y <- Update(y, 9)
y
x
x <- as.list(x)
x
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench
x <- 1:10
y <- 1:10
x <- as.list(x)
y <- as.list(y)
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1, columns=c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1, columns=c("test", "elapsed", "relative"))
bench
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1000, columns=c("test", "elapsed", "relative"))
bench
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=10000, columns=c("test", "elapsed", "relative"))
bench
source("newCode.R")
benchmark(MMPC(Matrix), replications=1)
benchmark(MMPC(Matrix), replications=1)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
y <- 1:5
y <- as.list(y)
y <- UpdateCPC(y, 6)
y
y <- 1:5
y <- as.list(y)
y
y <- UpdateCPC(y, 6)
y
source("newCode.R")
y <- 1:5
y <- as.list(y)
y
y <- UpdateCPC(y, 6)
y
source("newCode.R")
y <- 1:5
y <- as.list(y)
y <- UpdateCPC(y, 6)
y
source("newCode.R")
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
benchmark(c(2,3,4,5)^2)
x <- 1:100
benchmark(x^2)
x <- as.set(x)
x
benchmark(x^2)
benchmark(x^2, replications=1)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
gamma(x)
gamma(1)
gamma(2)
gamma(3)
gamma()
gamma(0.5)
gamma(0.001)
quit()
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
B <- t(Matrix)
Unique(B)
benchmark(unique(B), unique(Matrix))
benchmark(unique(t(B)), unique(B))
source("newCode.R")
source("newCode.R")
A <- matrix(1:16, 4, 4)
A
C <- trans(A)
source("newCode.R")
C <- trans(A)
C
benchmark(trans(A), t(A), replications=100)
A <- matrix(1:10000, 100, 100)
benchmark(trans(A), t(A), replications=100)
A <- matrix(1:1000000, 1000, 1000)
benchmark(trans(A), t(A), replications=100)
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
K <- matrix(1:16, 4, 4)
trans(K)
trans(K, 4, 4)
K <- as.numeric(matrix(1:16, 4, 4))
trans(K, 4, 4)
trans(K, as.integer(4), as.integer(4))
K
K <- matrix(as.numeric(1:16), 4, 4)
K
trans(K, as.integer(4), as.integer(4))
benchmark(t(K), trans(K, as.integer(4), as.integer(4), replications=100)
)
benchmark(t(K), trans(K, as.integer(4), as.integer(4)), replications=100))
benchmark(t(K), trans(K, as.integer(4), as.integer(4)), replications=100)
benchmark(t(K), trans(K, as.integer(4), as.integer(4)), replications=100)
benchmark(t(K), trans(K, as.integer(4), as.integer(4)), replications=1000)
K <- matrix(as.numeric(1:10000), 100, 100)
benchmark(t(K), trans(K, as.integer(100), as.integer(100)), replications=1000)
benchmark(t(K), trans(K, as.integer(100), as.integer(100)), replications=1000)
benchmark(t(K), trans(K, as.integer(100), as.integer(100)), replications=1000)
benchmark(t(K), trans(K, as.integer(100), as.integer(100)), replications=1000)
benchmark(t(K), trans(K, as.integer(100), as.integer(100)), replications=1000)
K <- matrix(as.numeric(1:1000000), 1000, 1000)
benchmark(t(K), trans(K, as.integer(1000), as.integer(1000)), replications=100)
source("newCode.R")
source("newCode.R")
A <- matrix(as.numeric(1:16), 4, 4)
T(A)
T(A, as.integer(4), as.integer(4))
source("newCode.R")
A
T(A, as.integer(4), as.integer(4))
A
source("newCode.R")
T(A, as.integer(4), as.integer(4))
source("newCode.R")
Test(1:16, 4, 4)
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
source("newCode.R")
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
Test(1:16, as.integer(4), as.integer(4))
source("newCode.R")
Mat <- t(Matrix)
mat <- as.matrix(Mat[,1])
mat
Svalue(mat)
length(which(mat==1))
source("newCode.R")
Svalue(mat)
source("newCode.R")
source("newCode.R")
Svalue(mat)
math <- Mat[,c(1,2)]
math
Svalue(math)
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
Svalue(math)
Svalue(Mat)
Svalue(Mat)
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
mathi <- Mat[,c(1,2,3)]
Svalue(mathi)
mathi <- Mat[,c(1,2,3)]
source("newCode.R")
Svalue(mathi)
source("newCode.R")
source("newCode.R")
source("newCode.R")
Svalue(mathi)
source("newCode.R")
Svalue(mathi)
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
Svalue(mathi)
source("newCode.R")
Svalue(mathi)
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
source("newCode.R")
Matrix
Mat
mat
mat <- Mat[,c(1,2,3)]
mat
MySvalue(mat)
