source("code.R")
quit()
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
quit
quit()
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
ls()
A
B <- matrix(sample(1:3, 100, replace=TRUE), 10, 10)
B
B <- matrix(sample(1:3, 100, replace=TRUE), 5, 20)
B
B <- matrix(sample(1:3, 100, replace=TRUE), 20, 5)
B
Bt <- B^T
Bt
B^T
B^t
t(B)
Bt <- t(B)
class(Bt)
class(Bt[1,1])
ncol <- as.integer(20)
nrow <- as.integer(5)
u <- Map(Bt, ncol, nrow)
ls()
source("code.R")
ls()
u <- Map(Bt, ncol, nrow)
u
source("code.R")
u <- Map(Bt, ncol, nrow)
source("code.R")
u <- Map(Bt, ncol, nrow)
source("code.R")
source("code.R")
quit()
dyn.load("main.so")
.Call("Map")
ls()
load table
Map
source("code.R")
source("code.R")
source("code.R")
Map(Bt, ncol, nrow)
Map(Bt, ncol, nrow)
Map(Bt, ncol, nrow)
source("code.R")
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
dim(unique(Bt))
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
B <- matrix(sample(c(1,2), 1000, replace=TRUE), 200, 5)
Bt <- t(B)
Bt
ncol <- as.integer(200)
nrow <- as.integer(5)
ncol
nrow
Map(Bt, ncol, nrow)
class(ncol)
class(nrow)
Bt <- as.integer(Bt)
Bt
B <- matrix(as.integer(sample(c(1,2), 1000, replace=TRUE)), 200, 5)
class(B)
class(B[1,1])
Bt <- t(B)
Map(Bt, ncol, nrow)
dim(unique(Bt))
dim(unique(B))
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
Map(Bt, ncol, nrow)
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
source("code.R")
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
source("code.R")
Map(Bt, ncol, nrow)
Matrix
source("code.R")
unique(Matrix)
T <- t(Matrix)
T
unique(T)
Map(T)
unique(T)
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
source("code.R")
bench
bench
source("code.R")
bench
source("newCode.R")
source("newCode.R")
source("newCode.R")
bench
quit()
source("code.R")
source("newCode.R")
bench
source("code.R")
bench
source("newCode.R")
bench
bench
bench
source("newCode.R")
bench
source("newCode.R")
source("newCode.R")
x <- list()
lenght(x)
length(x)
x$0 <- 1
x$1 <- 1
x$"1" <- 1
length(x)
source("newCode.R")
source("newCode.R")
x <- UpdateCPC(c(), list())
x <- UpdateCPC(c(), list())
x <- UpdateCPC(c(), list())
x <- list()
x$tmp <- 1
x
source("newCode.R")
x <- UpdateCPC(c(), list())
source("newCode.R")
x <- UpdateCPC(c(), list())
y <- list()
x <- UpdateCPC(c(), y)
y <- list()
source("newCode.R")
x <- UpdateCPC(c(), y)
x
source("newCode.R")
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
x
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
x
x <- UpdateCPC(1, x)
x
source("newCode.R")
x <- UpdateCPC(2, x)
x
source("newCode.R")
source("newCode.R")
source("newCode.R")
x <- UpdateCPC(2, x)
x
x <- list
x <- list()
x <- UpdateCPC(2, x)
x
x <- UpdateCPC(2, x)
source("newCode.R")
source("newCode.R")
source("newCode.R")
x
x <- list()
x <- UpdateCPC(2, x)
x
x <- UpdateCPC(2, x)
source("newCode.R")
x <- list()
x <- UpdateCPC(2, x)
source("newCode.R")
x <- UpdateCPC(2, x)
x
x <- list
x <- list()
x <- UpdateCPC(2, x)
x
x <- list()
x <- UpdateCPC(x, TRUE)
x <- UpdateCPC(x, "TRUE")
x <- list()
x <- UpdateCPC(x, c(), TRUE)
x
x
length(x)
if(true) print("hi")
if(TRUE) print("hi")
x[[1]] <- 1
x
x[[1]] <- c()
x
x[[1]] <- NULL
y
x
?list()
x <- new.env()
x
x[[1]] <- c()
x$1 <- c()
x$a <- c()
x
as.list(x)
source("newCode.R")
x <- list()
x <- UpdateCPC(x,2)
x
x <- UpdateCPC(x,2,TRUE)
x
y <- new.env()
tmp <- "1"
y$tmp <- c()
<
y
as.list(y)
y$"1"
y$"1"<-c()
y
as.list(y)
y$1
y$"1"
z <- as.list(y)
z
z$1
z[[1]
]
z
source("newCode.R")
x <- list8)
x <- list()
UpdateCPC(x, 2, TRUE)
x<-UpdateCPC(x, 2, TRUE)
x
UpdateCPC(x, 2, TRUE)
source("newCode.R")
source("newCode.R")
x <- list()
x<-UpdateCPC(x, 2, TRUE)
x
x<-UpdateCPC(x, 2)
x
x<-UpdateCPC(x, 5)
x
source("newCode.R")
x<-UpdateCPC(x, 4)
x
c(NULL, 4)
x[[1]]
x[[length(x)+1]] <- c(x[[1]], 4)
x
source("newCode.R")
y <- list()
y <- UpdateCPC(y, 5, TRUE)
y
y <- UpdateCPC(y, 5)
y
y <- UpdateCPC(y, 4)
y
source("newCode.R")
y <- list()
y <- UpdateCPC(y, 5, TRUE)
y <- UpdateCPC(y, 5)
y <- UpdateCPC(y, 4)
y
y <- UpdateCPC(y, 2)
y
z <- list()
z[[1]] <- 2
z[[2]] <- NULL
z
z[[2]] <- c()
z
z[[3]] <- 4
z
length(z)
z <- list()
z[[1]] <- 1
z[[2]] <- NULL
length(z)
z[[3]] <- 2
length(z)
source("newCode.R")
z <- list()
z <- UpdateCPC(z, c())
length(z)
z <- list()
z <- UpdateCPC(z, c())
source("newCode.R")
z <- UpdateCPC(z, c())
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
source("newCode.R")
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- UpdateCPC(z, )
z <- UpdateCPC(z, 4)
z
z <- list()
z <- UpdateCPC(z, 2)
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- list8)
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
z <- list()
z[[1]] <- 4
z[[2]] <- 4
z[[2]] <- 6
length(z[[3]])
z
z[[3]] <- 9
z[[4]] <- ⁰
z[[4]] <- 10
z[[5]] <- 1
z
x <- z[[2:4]]
x
x <- list8)
x <- list()
x <- z[[2:4]]
x <- z[[2,4]]
x <- z[[2]]:[[4]]
x <- z[[2]:[4]]
x <- z[2:4]
z
x
source("newCode.R")
bench
CPC
MMPC(Matrix)
MMPC(Matrix)
MMPC(Matrix)
source("newCode.R")
source("newCode.R")
MMPC(Matrix)
x<-MMPC(Matrix)
x
x<-MMPC(Matrix)
x
source("newCode.R")
u <- list()
u[[1]] <- 4
u[[3]] <- 5
u
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
y
source("newCode.R")
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
y[[1]]
y[[2]]
c()
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
x <- list8)
y <- Update(y, 1)
y
length(y)
source("newCode.R")
y <- Update(y, 1)
y
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
