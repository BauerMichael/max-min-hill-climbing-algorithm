library("Rcpp")
sourceCpp("code.cpp")
Unique(1)
Unique(1.0)
Unique(as.integer(1))
Unique(c)
Unique("c")
Unique(TRUE)
sourceCpp("code.cpp")
Unique(TRUE)
Unique(1.0)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
ls()
sourceCpp("code.cpp")
sourceCpp("code.cpp")
s()
ls()
MyTest()
ls()
sourceCpp("code.cpp")
MyTest()
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
x <- sample(c(1,2), 100, replace=TRUE)
x
class(x)
as.integer(x)
x <- as.integer(x)
class(x)
MyTest(x)
library("rbenchmark")
benchmark(MyTest(x), unique(x), replications=100)
sourceCpp("code.cpp")
benchmark(MyTest(x), unique(x), replications=100)
library("Rcpp")
library("rbenchmark")
sourceCpp("code.cpp")
A <- new(Properties, matN)
matN
matI
matS
mat
ls()
mat <- matrix(sample(c(1,2,3,4), 1000, replace=TRUE)
)
mat
mat <- matrix(sample(c(1,2,3,4), 1000, replace=TRUE), 250, 4)
mat
A <- new(Properties, mat)
A
A$cardinality
A$Cardinality( mat)
A$counts
sourceCpp("code.cpp")
printPowerset(4)
i <- as.integer(4)
printPowerset(i)
benchmark(printPowerset(as.integer(10), replications=10)
)
benchmark(printPowerset(as.integer(10)), replications=10)
sourceCpp("code.cpp")
benchmark(printPowerset(as.integer(10)), replications=10)
benchmark(printPowerset(as.integer(10)), replications=1000)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(i)
printPowerset(as.integer(10))
benchmark(printPowerset(as.integer(10)), replications=10)
benchmark(printPowerset(as.integer(10)), replications=1000)
benchmark(printPowerset(as.integer(10)), replications=1)
printPowerset(as.integer(5))
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(as.integer(5))
sourceCpp("code.cpp")
printPowerset(as.integer(5))
benchmark(printPowerset(as.integer(10)), replications=1)
sourceCpp("code.cpp")
printPowerset(as.integer(5))
source("../R/mmhc_test.R")
mat <- data.matrix(MyExample(1000, char = FALSE))
mat <- data.matrix(Example(1000, char = FALSE))
head(mat)
class(mat[1,1])
printPowerset(as.integer(5), mat)
source("../R/mmhc_test.R")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(as.integer(5), mat)
printPowerset(mat)
printPowerset(as.integer(5), mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
library("Rcpp")
library("rbenchmark")
sourceCpp("code.cpp")
printPowerset(mat)
library("Rcpp")
library("rbenchmark")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
library("Rcpp")
library("rbenchmark")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
benchmark(printPowerset(mat), replications=1)
benchmark(printPowerset(mat), replications=10)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
chisq.test(0.2832782)
pchisq(0.2832782, 2, FALSE)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
printPowerset(mat)
benchmark(printPowerset(mat), replications=10)
benchmark(printPowerset(mat), replications=1)
sourceCpp("mmpc.cpp")
sourceCpp("mmpc.cpp")
tmp <- mat[,c(1,4)]
card <- c(2,2,2,3,2)
ls()
sourceCpp("mmpc.cpp")
MySvalue(tmp, card)
head(tmp)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
MySvalue(tmp, card)
card <- c(2,3)
MySvalue(tmp, card)
tmp <- mat[,c(4,5,1)]
card <- c(3,2,2)
MySvalue(tmp, card)
tmp <- mat[,c(1,4,5)]
card <- c(2,3,2)
MySvalue(tmp, card)
sourceCpp("code.cpp")
Svalue(tmp,card)
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
Svalue(tmp,card)
sourceCpp("mmpc.cpp")
sourceCpp("mmpc.cpp")
C_MMPC(mat)
card <- c(2,2,2,3,2)
a <- 0.05
C_MMPC(mat, card, a)
printPowerset(mat)
tmp <- mat[,c(5,3,2)]
card <- c(2,2,2)
MySvalue(tmp, card)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
sourceCpp("code.cpp")
printPowerset(mat)
k <- printPowerset(mat)
length(k[[1]])
k <- printPowerset(mat)
length(k[[1]])
MySvalue(tmp, card)
card
head(tmp)
tmp <- mat[,c(3,1,5,4)]
card <- c(2,2,2,3)
MySvalue(tmp, card)
benchmark(printPowerset(mat), replications=1)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
K <- new(Properties, mat)
K
K$sums
K$n
K$dim
K$cardinality
K$Cardinality(mat)
K$cardinality
sourceCpp("code.cpp")
K <- new(Properties, mat)
K$cardinality
head(mat)
unique(mat[,5])
sourceCpp("code.cpp")
K <- new(Properties, mat)
sourceCpp("code.cpp")
K <- new(Properties, mat)
K$cardinality
K$Cardinality( mat)
sourceCpp("code.cpp")
K <- new(Properties, mat)
sourceCpp("code.cpp")
K <- new(Properties, mat)
K$Cardinality( mat)
K$cardinality
K$sums
sourceCpp("code.cpp")
library("Rcpp")
library("rbenchmark")
sourceCpp("code.cpp")
Test(mat)
mat
Test(mat)
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
K <- new(Properties, mat)
K$sums[[1]][12]
K$sums[[1]]
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
sourceCpp("code.cpp")
C_MMPC(mat, 0.05)
K <- new(Properties, mat)
K$sum[[1]]
K$sums[[1]]
ls()
tmp <- mat[,c(1,3)]
card <- c(2,2)
MySvalue(tmp, card)
source("mmpc.cpp")
source("mmpc.cpp")
source("mmpc.cpp")
source("mmpc.cpp")
source("mmpc.cpp")
source("mmpc.cpp")
source("mmpc.cpp")
exit
quit()
