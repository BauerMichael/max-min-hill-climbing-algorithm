x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
source("newCode.R")
x <- UpdateCPC(c(), y)
x
x <- UpdateCPC(1, x)
x
source("newCode.R")
x <- UpdateCPC(2, x)
x
source("newCode.R")
source("newCode.R")
source("newCode.R")
x <- UpdateCPC(2, x)
x
x <- list
x <- list()
x <- UpdateCPC(2, x)
x
x <- UpdateCPC(2, x)
source("newCode.R")
source("newCode.R")
source("newCode.R")
x
x <- list()
x <- UpdateCPC(2, x)
x
x <- UpdateCPC(2, x)
source("newCode.R")
x <- list()
x <- UpdateCPC(2, x)
source("newCode.R")
x <- UpdateCPC(2, x)
x
x <- list
x <- list()
x <- UpdateCPC(2, x)
x
x <- list()
x <- UpdateCPC(x, TRUE)
x <- UpdateCPC(x, "TRUE")
x <- list()
x <- UpdateCPC(x, c(), TRUE)
x
x
length(x)
if(true) print("hi")
if(TRUE) print("hi")
x[[1]] <- 1
x
x[[1]] <- c()
x
x[[1]] <- NULL
y
x
?list()
x <- new.env()
x
x[[1]] <- c()
x$1 <- c()
x$a <- c()
x
as.list(x)
source("newCode.R")
x <- list()
x <- UpdateCPC(x,2)
x
x <- UpdateCPC(x,2,TRUE)
x
y <- new.env()
tmp <- "1"
y$tmp <- c()
<
y
as.list(y)
y$"1"
y$"1"<-c()
y
as.list(y)
y$1
y$"1"
z <- as.list(y)
z
z$1
z[[1]
]
z
source("newCode.R")
x <- list8)
x <- list()
UpdateCPC(x, 2, TRUE)
x<-UpdateCPC(x, 2, TRUE)
x
UpdateCPC(x, 2, TRUE)
source("newCode.R")
source("newCode.R")
x <- list()
x<-UpdateCPC(x, 2, TRUE)
x
x<-UpdateCPC(x, 2)
x
x<-UpdateCPC(x, 5)
x
source("newCode.R")
x<-UpdateCPC(x, 4)
x
c(NULL, 4)
x[[1]]
x[[length(x)+1]] <- c(x[[1]], 4)
x
source("newCode.R")
y <- list()
y <- UpdateCPC(y, 5, TRUE)
y
y <- UpdateCPC(y, 5)
y
y <- UpdateCPC(y, 4)
y
source("newCode.R")
y <- list()
y <- UpdateCPC(y, 5, TRUE)
y <- UpdateCPC(y, 5)
y <- UpdateCPC(y, 4)
y
y <- UpdateCPC(y, 2)
y
z <- list()
z[[1]] <- 2
z[[2]] <- NULL
z
z[[2]] <- c()
z
z[[3]] <- 4
z
length(z)
z <- list()
z[[1]] <- 1
z[[2]] <- NULL
length(z)
z[[3]] <- 2
length(z)
source("newCode.R")
z <- list()
z <- UpdateCPC(z, c())
length(z)
z <- list()
z <- UpdateCPC(z, c())
source("newCode.R")
z <- UpdateCPC(z, c())
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
source("newCode.R")
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- UpdateCPC(z, )
z <- UpdateCPC(z, 4)
z
z <- list()
z <- UpdateCPC(z, 2)
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
source("newCode.R")
z <- list8)
z <- list()
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 2)
z
z <- UpdateCPC(z, 3)
z
z <- UpdateCPC(z, 4)
z
z <- UpdateCPC(z, 5)
z
z <- list()
z[[1]] <- 4
z[[2]] <- 4
z[[2]] <- 6
length(z[[3]])
z
z[[3]] <- 9
z[[4]] <- ⁰
z[[4]] <- 10
z[[5]] <- 1
z
x <- z[[2:4]]
x
x <- list8)
x <- list()
x <- z[[2:4]]
x <- z[[2,4]]
x <- z[[2]]:[[4]]
x <- z[[2]:[4]]
x <- z[2:4]
z
x
source("newCode.R")
bench
CPC
MMPC(Matrix)
MMPC(Matrix)
MMPC(Matrix)
source("newCode.R")
source("newCode.R")
MMPC(Matrix)
x<-MMPC(Matrix)
x
x<-MMPC(Matrix)
x
source("newCode.R")
u <- list()
u[[1]] <- 4
u[[3]] <- 5
u
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
x
y
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
x <- list()
y <- list()
x <- UpdateCPC(x, 1)
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
source("newCode.R")
y <- Update(y, 1)
source("newCode.R")
y <- Update(y, 1)
y
source("newCode.R")
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
y[[1]]
y[[2]]
c()
source("newCode.R")
y <- list()
y <- Update(y, 1)
y
x <- list8)
y <- Update(y, 1)
y
length(y)
source("newCode.R")
y <- Update(y, 1)
y
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
source("newCode.R")
source("newCode.R")
y <- Update(y, 2)
y <- list8)
y <- list()
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
source("newCode.R")
y <- Update(y, 2)
y
source("newCode.R")
source("newCode.R")
y <- list()
y <- Update(y, 2)
y
y <- Update(y, 2)
y
y <- Update(y, 3)
y
source("newCode.R")
source("newCode.R")
y <- Update(y, 3)
source("newCode.R")
y <- Update(y, 3)
y
source("newCode.R")
y
y <- Update(y, 3)
y
source("newCode.R")
x <- c()
class(x)
x <- c(NULL, 1, 2, 3)
x
class(x)
source("newCode.R")
y <- list()
y <- Update(y, 1)
<
y
y <- Update(y, 1)
y
y <- Update(y, 2)
y
source("newCode.R")
y <- list()
y <- Update(y, 1)
y <- Update(y, 1)
y
y <- Update(y, 2)
y
y <- Update(y, 3)
y
y <- Update(y, 4)
y
x <- list()
y <- list()
x <- c(1, 2)
y <- c(1, 2)
bench <- benchmark(Update(y, 3), UpdateCPC(x, 3), replications=10, columns=c("test", "elapsed", "relative")
)
bench <- benchmark(Update(y, 3), UpdateCPC(x, 3), replications=10, columns=c("test", "elapsed", "relative"))
warnings()
bench
x
y
x <- c(1, 2, 3, 4, 5, 6, 7)
y <- x
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench
y <- Update(y, 9)
y
x
x <- as.list(x)
x
bench <- benchmark(Update(y, 9), UpdateCPC(x, 9), replications=1, columns=c("test", "elapsed", "relative"))
bench
x <- 1:10
y <- 1:10
x <- as.list(x)
y <- as.list(y)
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1, columns=c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1, columns=c("test", "elapsed", "relative"))
bench
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=1000, columns=c("test", "elapsed", "relative"))
bench
bench <- benchmark(Update(y, 12), UpdateCPC(x, 12), replications=10000, columns=c("test", "elapsed", "relative"))
bench
source("newCode.R")
benchmark(MMPC(Matrix), replications=1)
benchmark(MMPC(Matrix), replications=1)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
MMPC(Matrix)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
y <- 1:5
y <- as.list(y)
y <- UpdateCPC(y, 6)
y
y <- 1:5
y <- as.list(y)
y
y <- UpdateCPC(y, 6)
y
source("newCode.R")
y <- 1:5
y <- as.list(y)
y
y <- UpdateCPC(y, 6)
y
source("newCode.R")
y <- 1:5
y <- as.list(y)
y <- UpdateCPC(y, 6)
y
source("newCode.R")
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
benchmark(c(2,3,4,5)^2)
x <- 1:100
benchmark(x^2)
x <- as.set(x)
x
benchmark(x^2)
benchmark(x^2, replications=1)
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
source("newCode.R")
source("newCode.R")
source("newCode.R")
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
source("newCode.R")
bench
bench <- benchmark(MMPC(Matrix), mmpc(Example(250,char=FALSE)), replications=1, columns = c("test", "elapsed", "relative"))
bench
gamma(x)
gamma(1)
gamma(2)
gamma(3)
gamma()
gamma(0.5)
gamma(0.001)
quit()
