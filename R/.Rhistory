Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
ForwardPhase(1,E)
source("mmhc.R")
ForwardPhase(1,E)
Forward(E, as.integer(1), card, 0.05)
ForwardPhase(1,E)
source("mmhc.R")
ForwardPhase(1,E)
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=1)
source("mmhc.R")
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=1)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=100)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
accepted
accept
cpc
ls()
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(2), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(2), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
sourceCpp("../src/mmpc.cpp")
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=1)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=100)
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=1)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=100)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=1000)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(1), card, 0.05)
Forward(E, as.integer(2), card, 0.05)
Forward(E, as.integer(3), card, 0.05)
Forward(E, as.integer(4), card, 0.05)
Forward(E, as.integer(5), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(4), card, 0.05)
sourceCpp("../src/mmpc.cpp")
Forward(E, as.integer(4), card, 0.05)
benchmark(ForwardPhase(1, E), Forward(E, as.integer(1), card, 0.05), replications=100)
benchmark(ForwardPhase(4, E), Forward(E, as.integer(4), card, 0.05), replications=100)
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
MMPCC(E)
sourceCpp("../src/mmpc.cpp")
sourceCpp("../src/mmpc.cpp")
source("mmhc.R")
MMPCC(E)
MMPCC(E)
source("mmhc.R")
sourceCpp("../src/mmpc.cpp")
MMPCC(E)
sourceCpp("../src/mmpc.cpp")
MMPCC(E)
sourceCpp("../src/mmpc.cpp")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
class(E)
E <- data.matrix(Example(1000, char = FALSE))
MMPCC(E)
MMPCC(E, as.integer(1), card, 0.05)
card
MMPCC(E, as.integer(2), card, 0.05)
MMPCC(E, as.integer(3), card, 0.05)
MMPCC(E, as.integer(4), card, 0.05)
MMPCC(E, as.integer(5), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
MMPCC(E, as.integer(2), card, 0.05)
MMPCC(E, as.integer(3), card, 0.05)
MMPCC(E, as.integer(4), card, 0.05)
MMPCC(E, as.integer(5), card, 0.05)
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
class(E)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
source("mmhc.R")
source("mmhc.R")
MMPCC(E, as.integer(1), card, 0.05)
benchmark(MMPCC(E, as.integer(1), card, 0.05), MMPC(E), replications=1)
source("mmhc.R")
df <- Example(1000, char = FALSE)
x <- MMHCR(df)
source("mmhc.R")
x <- MMHCR(df)
x <- MMHCC(df)
plot(x)
x <- MMHCC(df)
x <- MMHCC(df)
x <- MMHCC(df)
x <- MMHCC(df)
x <- MMHCC(df)
x <- MMHCC(df)
x <- MMHCC(df)
source("mmhc.R")
y <- MMHCR(df)
source("mmhc.R")
y <- MMHCR(df)
source("mmhc.R")
y <- MMHCR(df)
plot(y)
benchmark(MMHCC(df), MMHCR(df), replications=1)
benchmark(MMHCC(df), mmhc(df), replications=1)
benchmark(MMHCC(df), replications=1)
benchmark(MMHCC(df), replications=1)
benchmark(MMHCC(df), replications=1)
benchmark(MMHCC(df), MMHCR(df), replications=1)
benchmark(MMHCC(df), MMHCR(df), replications=1)
benchmark(MMHCC(df), MMHCR(df), replications=1)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
AM
AM <- matrix(0,5,5)
AM
AM[1,4] = AM[2,4] = AM[2,3] = AM[4,5] = 1
AM
ScoreMatrix(E, AM)
MatrixScore(E, AM)
ScoreTheGraph(E, AM, as.integer(5), card, 1)
source("mmhc.R")
MatrixScore(E, AM)
ScoreTheGraph(E, AM, as.integer(5), card, 1)
source("mmhc.R")
plot(y)
source("mmhc.R")
source("mmhc.R")
y <- MMHCT(df)
source("mmhc.R")
y <- MMHCT(df)
source("mmhc.R")
y <- MMHCT(df)
source("mmhc.R")
y <- MMHCT(df)
source("mmhc.R")
y <- MMHCT(df)
x <- MMHCC(df)
plot(y)
source("mmhc.R")
y <- MMHCT(df)
plot(y)
MatrixScore(E, AM)
y <- MMHCT(df)
source("mmhc.R")
y <- MMHCT(df)
plot(y)
source("mmhc.R")
y <- MMHCT(df)
plot(y)
x <- MMHCC(df)
plot(x)
dm <- data.matrix(df)
write(t(dm))
source("mmhc.R")
y <- MMHCT(df)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
Cardinality(E)
source("mmhc.R")
Cardinality(E)
getCard(E)
benchmark(Cardinality(E), getCard(E), replications=1)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
b1
source("mmhc.R")
b1
source("mmhc.R")
source("mmhc.R")
b1
b2
b3
b4
data(learning.test)
x <- C_MMHC(learning.test)
y <- R_MMHC(learning.test)
plot(x)
plot(y)
benchmark(C_MMHC(learning.test), mmhc(learning.test), replications=1)
source("mmhc.R")
source("mmhc.R")
source("mmhc.R")
x <- C_MMHC(learning.test)
x <- C_MMHC(MyExample)
plot(x)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
source("mmhc.R")
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
x <- C_MMHC(MyExample)
x <- C_MMHC(MyExample)
plot(x)
source("mmhc.R")
x <- C_MMHC(MyExample)
x <- C_MMHC(MyExample)
plot(x)
x <- C_MMHC(MyExample)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
source("mmhc.R")
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
source("mmhc.R")
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
source("mmhc.R")
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
source("mmhc.R")
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
benchmark(C_MMHC(MyExample), mmhc(MyExample), replications=1)
quit()
source("mmhc.R")
mat <- MyExample
class(mat)
benchmark(MMPCR(mat), mmpc(mat), replications=1, columns=("test", "elapsed", "relative"))
benchmark(MMPCR(mat), mmpc(mat), replications=1, columns=("test", "elapsed", "relative"))
benchmark(MMPCR(mat), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(MMPCR(mat), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(R_MMPC(mat), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(R_MMPC(mat,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
R_MMPC(mat, 0.05)
dmat <- data.matrix(mat)
benchmark(R_MMPC(dmat,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
card
benchmark(C_MMPC(dmat,card,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(1000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(500, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
C_MMPC(dmat, card, 0.05)
mat <- Example(250, char = FALSE)
dmat <- data.matrix(mat)
C_MMPC(dmat, card, 0.05)
benchmark(C_MMPC(dmat,card,0.05), mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(500, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(750, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(1000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(1500, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(2000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(2500, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(3500, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(4000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(5000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
mat <- Example(10000, char = FALSE)
dmat <- data.matrix(mat)
benchmark(C_MMPC(dmat,card,0.05), R_MMPC(dmat, 0.05),  mmpc(mat), replications=1, columns = c("test", "elapsed", "relative"))
x <- mmpc(mat)
y <- mmhc(x)
mat1 <- data.matrix(Example(250, char = FALSE))
mat2 <- data.matrix(Example(500, char = FALSE))
mat3 <- data.matrix(Example(750, char = FALSE))
mat4 <- data.matrix(Example(1000, char = FALSE))
mat5 <- data.matrix(Example(1500, char = FALSE))
mat6 <- data.matrix(Example(2000, char = FALSE))
mat7 <- data.matrix(Example(2500, char = FALSE))
mat8 <- data.matrix(Example(3500, char = FALSE))
mat9 <- data.matrix(Example(4000, char = FALSE))
mat10 <- data.matrix(Example(5000, char = FALSE))
mat11 <- data.matrix(Example(10000, char = FALSE))
dmat <- list()
dmat[[1]] <- mat1
dmat[[2]] <- mat2
dmat[[3]] <- mat3
dmat[[4]] <- mat4
dmat[[5]] <- mat5
dmat[[6]] <- mat6
dmat[[7]] <- mat7
dmat[[8]] <- mat8
dmat[[9]] <- mat9
dmat[[10]] <- mat10
dmat[[11]] <- mat11
for (i in 1:11) {
print(benchmark()
}
source("mmhc.R")
source("mmhc.R")
BenchFunction()
x <- BenchFunction()
source("mmhc.R")
BenchFunction()
source("mmhc.R")
BenchFunction()
C_MMHC(mat1)
R_MMHC(mat1)
source("mmhc.R")
R_MMHC(mat1)
source("mmhc.R")
BenchFunction()
x <- BenchFunction
x <- BenchFunction()
myList <- c(250, 500, 750, 1000, 1500, 2000, 2500, 3500, 4000, 5000, 10000)
for (i in 1:length(myList)) {
x <- Example(myList[i], char = FALSE)
print(benchmark(C_MMHC(x), R_MMHC(x), mmhc(x), replications=1, column = c("test", "elapsed", "relative"))
)
}
x
R_MMHC(x)
source("mmhc.R")
R_MMHC(x)
for (i in 1:length(myList)) {
x <- Example(myList[i], char = FALSE)
print(benchmark(C_MMHC(x), mmhc(x), replications=1, column = c("test", "elapsed", "relative")))
}
for (i in 1:length(myList)) {
x <- Example(myList[i], char = FALSE)
print(benchmark(C_MMHC(x), mmhc(x), replications=1, columns = c("test", "elapsed", "relative")))
}
source("mmhc.R")
myList
plot(myList, mmpcTimeC)
plot(myList, mmpcTimeC, type="l")
plot(myList, mmpcTimeC, type="l")
lines(myList, mmpcTimeR, col="green")
lines(myList, mmpcTimeBN, col="red")
png("denNamenDerDatei")
plot(myList, mmpcTimeC, type="l")
lines(myList, mmpcTimeR, col="green")
lines(myList, mmpcTimeBN, col="red")
dev.off()
png("denNamenDerDatei2.png")
plot(myList, mmhcTimeC, type="l")
lines(myList, mmhcTimeBN, col="red")
dev.off()
head(mat1)
mat <- Example(1000, char = FALSE)
dmat <- data.matrix(mat)
head(dma)
head(dmat)
C_MMPC(dmat)
C_MMPC(dmat, 0.05)
C_MMPC(dmat, card, 0.05)
quit()
